{"ast":null,"code":"import _regeneratorRuntime from\"E:/TestDeploy/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"E:/TestDeploy/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"E:/TestDeploy/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState,useRef}from'react';import{useParams}from\"react-router-dom\";import ChatWindow from'./ChatWindow';import MessageDisscution from'./MessageDisscution';import'./MessagePage.scss';import{createNewRoom,listRoomOfUser}from'../../services/userService';import socketIOClient from\"socket.io-client\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";require('dotenv').config();function MessagePage(props){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),dataRoom=_useState2[0],setdataRoom=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),selectedRoom=_useState4[0],setselectedRoom=_useState4[1];var _useState5=useState({}),_useState6=_slicedToArray(_useState5,2),dataUser=_useState6[0],setdataUser=_useState6[1];var host=process.env.REACT_APP_BACKEND_URL;var socketRef=useRef();var _useState7=useState(),_useState8=_slicedToArray(_useState7,2),id=_useState8[0],setId=_useState8[1];useEffect(function(){socketRef.current=socketIOClient.connect(host);var userData=JSON.parse(localStorage.getItem('userData'));setdataUser(userData);var createRoom=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var res;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return createNewRoom({userId1:userData.id});case 2:res=_context.sent;if(res&&res.errCode){fetchListRoom(userData.id);}case 4:case\"end\":return _context.stop();}}},_callee);}));return function createRoom(){return _ref.apply(this,arguments);};}();if(userData){socketRef.current.on('getId',function(data){setId(data);});// phần này đơn giản để gán id cho mỗi phiên kết nối vào page. Mục đích chính là để phân biệt đoạn nào là của mình đang chat.\ncreateRoom();fetchListRoom(userData.id);socketRef.current.on('sendDataServer',function(dataGot){fetchListRoom(userData.id);});socketRef.current.on('loadRoomServer',function(dataGot){fetchListRoom(userData.id);});return function(){socketRef.current.disconnect();};}},[]);var handleClickRoom=function handleClickRoom(roomId){socketRef.current.emit('loadRoomClient');setselectedRoom(roomId);};var fetchListRoom=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(userId){var res;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return listRoomOfUser(userId);case 2:res=_context2.sent;if(res&&res.errCode==0){setdataRoom(res.data);}case 4:case\"end\":return _context2.stop();}}},_callee2);}));return function fetchListRoom(_x){return _ref2.apply(this,arguments);};}();return/*#__PURE__*/_jsx(\"div\",{className:\"container\",children:/*#__PURE__*/_jsx(\"div\",{className:\"ks-page-content\",children:/*#__PURE__*/_jsx(\"div\",{className:\"ks-page-content-body\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"ks-messenger\",children:[/*#__PURE__*/_jsx(MessageDisscution,{userId:dataUser.id,isAdmin:false,handleClickRoom:handleClickRoom,data:dataRoom}),selectedRoom?/*#__PURE__*/_jsx(ChatWindow,{userId:dataUser.id,roomId:selectedRoom}):/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"span\",{className:\"title\",children:\"Ch\\u01B0a ch\\u1ECDn ph\\xF2ng\"})})]})})})});}export default MessagePage;","map":{"version":3,"names":["React","useEffect","useState","useRef","useParams","ChatWindow","MessageDisscution","createNewRoom","listRoomOfUser","socketIOClient","require","config","MessagePage","props","dataRoom","setdataRoom","selectedRoom","setselectedRoom","dataUser","setdataUser","host","process","env","REACT_APP_BACKEND_URL","socketRef","id","setId","current","connect","userData","JSON","parse","localStorage","getItem","createRoom","userId1","res","errCode","fetchListRoom","on","data","dataGot","disconnect","handleClickRoom","roomId","emit","userId"],"sources":["E:/TestDeploy/front-end/src/container/Message/MessagePage.js"],"sourcesContent":["import React, { useEffect, useState,useRef } from 'react';\r\nimport { useParams } from \"react-router-dom\";\r\nimport ChatWindow from './ChatWindow';\r\nimport MessageDisscution from './MessageDisscution';\r\nimport './MessagePage.scss';\r\nimport {createNewRoom,listRoomOfUser} from '../../services/userService';\r\nimport socketIOClient from \"socket.io-client\";\r\nrequire('dotenv').config();\r\nfunction MessagePage(props) {\r\n  const [dataRoom, setdataRoom] = useState([])\r\n  const [selectedRoom, setselectedRoom] = useState('')\r\n  const [dataUser, setdataUser] = useState({})\r\n  const host = process.env.REACT_APP_BACKEND_URL;\r\n  const socketRef = useRef();\r\n  const [id, setId] = useState();\r\n  useEffect(()=>{\r\n    socketRef.current = socketIOClient.connect(host)\r\n    const userData = JSON.parse(localStorage.getItem('userData'));\r\n    setdataUser(userData)\r\n    let createRoom = async()=>{\r\n     let res = await createNewRoom({\r\n        userId1:userData.id\r\n      })\r\n      if(res && res.errCode){\r\n        fetchListRoom(userData.id)\r\n      }\r\n    }\r\n    if(userData){\r\n      socketRef.current.on('getId', data => {\r\n        setId(data)\r\n      }) // phần này đơn giản để gán id cho mỗi phiên kết nối vào page. Mục đích chính là để phân biệt đoạn nào là của mình đang chat.\r\n      createRoom()\r\n  \r\n  \r\n      \r\n      fetchListRoom(userData.id)\r\n  \r\n   socketRef.current.on('sendDataServer', dataGot => {\r\n      fetchListRoom(userData.id)\r\n      }) \r\n      socketRef.current.on('loadRoomServer', dataGot => {\r\n        fetchListRoom(userData.id)\r\n        }) \r\n      return () => {\r\n        socketRef.current.disconnect();\r\n      };\r\n    }\r\n   \r\n\r\n  },[])\r\n let handleClickRoom = (roomId)=>{\r\n  \r\n  socketRef.current.emit('loadRoomClient')\r\n    setselectedRoom(roomId)\r\n    \r\n }\r\n let fetchListRoom = async(userId) =>{\r\n  let res = await listRoomOfUser(userId)\r\n  if(res && res.errCode==0){\r\n    setdataRoom(res.data)\r\n  }\r\n}\r\n    return (\r\n\r\n        <div className=\"container\">\r\n        <div className=\"ks-page-content\">\r\n          <div className=\"ks-page-content-body\">\r\n            <div className=\"ks-messenger\">\r\n                 <MessageDisscution userId={dataUser.id} isAdmin={false} handleClickRoom={handleClickRoom} data={dataRoom}/>\r\n                 {selectedRoom ? <ChatWindow userId={dataUser.id} roomId={selectedRoom}  />\r\n                 :<div>\r\n                    <span className='title'>Chưa chọn phòng</span>\r\n                 </div> \r\n                }\r\n                \r\n             \r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    );\r\n}\r\n\r\nexport default MessagePage;"],"mappings":"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"},"metadata":{},"sourceType":"module"}